# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-01-19 11:34
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import student.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('code', models.SlugField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coursework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('descriptor', models.URLField()),
                ('state', models.CharField(choices=[('i', 'Invisible to Students'), ('c', 'Closed for Submissions'), ('s', 'Accepting Solutions Only'), ('b', 'Accepting Solutions and Tests'), ('t', 'Accepting Tests Only')], default='i', max_length=1)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Course')),
            ],
        ),
        migrations.CreateModel(
            name='EnrolledUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Course')),
                ('login', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filepath', models.FileField(upload_to=student.models.upload_directory_path)),
                ('type', models.CharField(choices=[('s', 'Solution to Coursework'), ('c', 'Test Case for Solution'), ('r', 'Results of Running Test Case'), ('f', 'Feedback for a Solution')], max_length=1)),
                ('coursework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Coursework')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_level', models.IntegerField(null=True)),
                ('waiting_to_run', models.BooleanField(default=True)),
                ('coursework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_data_coursework_relation', to='student.Coursework')),
                ('feedback', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_data_feedback_file_relation', to='student.File')),
                ('initiator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_data_inititating_user_relation', to=settings.AUTH_USER_MODEL)),
                ('results', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_data_results_file_relation', to='student.File')),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_data_solution_file_relation', to='student.File')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_data_test_file_relation', to='student.File')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='testdata',
            unique_together=set([('test', 'solution', 'coursework', 'initiator')]),
        ),
        migrations.AlterUniqueTogether(
            name='enrolleduser',
            unique_together=set([('login', 'course')]),
        ),
    ]
